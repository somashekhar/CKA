A service is accessible from all pods in the cluster irrespective of on what nodes the pods are on.
A pod is hoisted on node and service hoisted accross the cluster.

ClusterIP   :   When service is accessible within the cluster.
NodePort    :   When service is accessible outside the cluster.

kubelet watches changes in clsuter through kube-api server and creates the pods.
It then invokes CNI plugin to configure an IP to that pod.

kube-proxy watches changes in clsuter through kube-api server and creates the service.
Service is an virtual object and it gets an IP from predefined range by kube-proxy.
kube-proxy creates a forwarding rules on each node in the cluster. Saying any traffic coming to this service should go to a pod.

# Set default IP range for services
kube-api-server --service-cluster-ip-range ipNet (default: 10.0.0.0/24)
ps aux | grep kube-api-server 

kubelet get pods -o wide 
kubelet get service

iptables -L -t net | grep db-service 
cat /var/log/kube-proxy.log


# Commands
ip a                                [get ip range of nodes]

kubectl get pods -n kube-system                             [get weave pod ]
kubectl logs <weave-pod-name> -c weave -n kube-system       [get pod ip range]
kubectl logs <weave-pod-name> -c weave -n kube-system       [get type of proxy is the kube-proxy]

cat /etc/kubernetes/manifests/kube-apiserver.yaml           [get ip range for services]