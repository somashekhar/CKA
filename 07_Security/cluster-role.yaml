
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-administrator
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["nodes"]  
    verbs: ["list", "get", "create", "delete"]

# To create a role    
# kubectl create -f cluster-role.yaml    


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-amin-role-binding
  namespace: default
subjects:
  - kind: User
    name: cluster-admin
    apiGroup: rbac.authorization.k8s.io  
roleRef:
  kind: ClusterRole
  name: cluster-administrator
  apiGroup: rbac.authorization.k8s.io

# To create a rolebinding
# kubectl create -f cluster-admin-role-binding.yaml  

# kubectl get roles
# kubectl get rolebindings
# kubectl describe role <role name>
# kubectl describe rolebinding <role binding name>


